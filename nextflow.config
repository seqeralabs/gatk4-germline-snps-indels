manifest {
    name = 'GATK4 Germline SNP and Indel Analysis'
    description = 'Workflow for germline short variant discovery using GATK4'
    version = '0.0.1'
    author = 'Evan Floden <evan@seqera.io>; Abhinav Sharma <abhinav@seqera.io>'
    defaultBranch = 'master'
    homePage = 'https://github.com/seqeralabs/gatk4-germline-snps-indels'
    nextflowVersion = '>=21.04.0'
}



// Default params for Benchmarking on Seqera Labs infrastructure.
params {

    GATK_APPLY_BQSR {
        java_opts = "-Xms3000m"
    }

    GATK_BASE_RECALIBRATOR {
        java_opts = "-Xms4000m"
    }

    GATK_GATHER_BAM_FILES {
        java_opts = "-Xms2000m"
        compression_level = 5
    }

    GATK_GATHER_BQSR_REPORTS {
        java_opts = "-Xms3000m"
    }

    GATK_HAPLOTYPE_CALLER {
        java_opts = "-Xmx4G"
    }

    GATK_MARK_DUPLICATES {
        java_opts = "-Xms4000m"
        compression_level = 5
    }

    GATK_MERGE_BAM_ALIGNMENT {
        java_opts = "-Xms6000m"
        compression_level = 5
    }

    GATK_MERGE_VCFS {
        java_opts = "-Xmx4G"
    }

    GATK_SORT_AND_FIX_TAGS {
        java_opts_sort = "-Xms4000m"
        java_opts_fix = "-Xms500m"
        compression_level = 5
    }

    PICARD_SAM_TO_FASTQ_BWA_MEM {
        samtools_path = "samtools"
        bwa_path = "/usr/gitc/bwa"
        picard_path = "/usr/gitc/picard.jar"
        java_path = "java"
        java_opts = "-Xms3000m"
        compression_level = 5
    }

    GATK_PAIRED_FASTQ_TO_UNMAPPED_BAM {
        java_opts = "-Xms4000m"
    }

}


profiles {
    docker {
        docker {
            enabled = true
            fixOwnership = true
        }

        process {
            errorStrategy = 'retry'
            maxRetries = 3

            withLabel:
            'gatk4_container' {
                container = "quay.io/seqeralabs/gatk4:4.1.8.1"
            }

            withLabel:
            'gitc_container' {
                container = "quay.io/seqeralabs/genomes-in-the-cloud:2.3.1-1512499786"
            }
        }

        includeConfig "./conf/optimized_processes.config"
    }

    slurm {
        process {
            errorStrategy = 'retry'
            maxRetries = 3
            executor = 'slurm'
        }
    }


    awsbatch {
        workDir = 's3://work' // <- NOTE: replace with your own bucket!

        aws {
            region = 'eu-west-1'
            batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        }

        process {

            ext.accountid = "AWS_ACCOUNT_ID" // <- NOTE: replace with your own creds!
            ext.registry = "${ext.accountid}.dkr.ecr.${aws.region}.amazonaws.com"

            executor = 'awsbatch'

            errorStrategy = 'retry'
            maxRetries = 3

            withName:
            'GATK.*' {
                container = "quay.io/seqeralabs/gatk4:4.1.8.1"
            }

            withName:
            'BWA.*|PICARD.*' {
                container = "quay.io/seqeralabs/genomes-in-the-cloud:2.3.1-1512499786"
            }
        }
    }

    googlelifescience {
        workDir = 'gs://work' // <- NOTE: replace with your own bucket!

        google {
            project = "project_name"
            zone = "europe-west2-c"
        }

        process {
            errorStrategy = 'retry'
            ext.hostRegion = "eu"
            ext.projectId = "project-id" // <- NOTE: replace with your own bucket!
            ext.registry = "${ext.hostRegion}/gcr.io/${ext.projectId}/"
            executor = 'google-lifesciences'
        }

    }


}

